#
# Vendr Nginx configuration.
#
# ==================================================================================

# Cache directives.
# 
# DEBUG: Use this directive in API server's ` @proxy_to_app`
# 	 add_header X-Cache-Status $upstream_cache_status;
#

# `proxy_cache_path':
#  ($arg0) Set the location of the cache files, (`levels`) the cache
#  levels/hierarchy of dir, (`keys_zone`) location of active keys and their
#  info, and the (`inactive`) cache TTL (time-to-live).
#proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=vendoor_cache:10m inactive=60m;

# `proxy_cache_key`:
#  Nginx generates cache keys by applying MD5 to the `fastcgi_cache_key` value
#  for each request. Naturally, this should be unique. Here, we're concatenating
#  the scheme (HTTP or HTTPS), the method type (GET, POST, etc.), the host (*.vendoor),
#  and the actual request URI.
#proxy_cache_key "$scheme$host$request_uri";
#proxy_cache_bypass $http_x_refresh;

# `proxy_cache_valid`
#  Only cache successful (200) responses.
#proxy_cache_valid 200 60m;


# Server directives.
#

# Proxy servers. Will use round-robin by default.
upstream vendoor {
	#server unix:/home/john/Documents/em2/em2.sock fail_timeout=0;
	server 172.31.24.13:8824;
}

# API Server.
server {
    	listen 443 ssl; 
	client_max_body_size 10M;
	server_name api.vendoor.ca;
	
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;
	
	# Proxy upstream.
	location / {
		try_files $uri @proxy_to_app;
	}

	# Serve static files.
	location /static {
		alias /home/ubuntu/vendr/vendr-api/vendr/static;
	}
	
	# Serve media files.
	location /media {
		autoindex on;
		alias /home/ubuntu/vendr/vendr-api/vendr/media;
	}

	# Perform proxy.
	location @proxy_to_app {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://vendoor;
		#proxy_cache vendoor_cache;
		#proxy_cache_valid 200 60m;
	}

	ssl_certificate /etc/letsencrypt/live/www.vendoor.ca/fullchain.pem; 
	ssl_certificate_key /etc/letsencrypt/live/www.vendoor.ca/privkey.pem; 
    	include /etc/letsencrypt/options-ssl-nginx.conf; 
    	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 

}

# API Docs Server.
server {
	listen 443 ssl;
	server_name developer.vendoor.ca;

	root /home/ubuntu/vendr/slate/build;
	index index.html;
	location / {
		auth_basic "Restricted Content";
		auth_basic_user_file /etc/nginx/.htpasswd;
        	try_files $uri /index.html;
	}

	ssl_certificate /etc/letsencrypt/live/www.vendoor.ca/fullchain.pem; 
	ssl_certificate_key /etc/letsencrypt/live/www.vendoor.ca/privkey.pem; 
    	include /etc/letsencrypt/options-ssl-nginx.conf; 
    	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 

}

# Notification proxy.
upstream notify {
	server 127.0.0.1:9000;
}

# Notification server.
server {
	listen 80;
    	listen 443 ssl; 
	server_name notify.vendoor.ca;
	
	access_log /var/log/nginx/notify_access.log;
	error_log /var/log/nginx/notify_error.log;

	location / {
		try_files $uri @proxy_to_app;
	}

	location @proxy_to_app {
		proxy_pass http://notify;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}

	ssl_certificate /etc/letsencrypt/live/www.vendoor.ca/fullchain.pem; 
	ssl_certificate_key /etc/letsencrypt/live/www.vendoor.ca/privkey.pem; 
    	include /etc/letsencrypt/options-ssl-nginx.conf; 
    	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 

}

# WWW Server.
server {
    	listen 443 ssl;
	server_name www.vendoor.ca;

	#https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04
	root /home/ubuntu/vendr/vendr-frontend/Kangaa/build;
	index index.html;
	location / {
		auth_basic "Restricted Content";
		auth_basic_user_file /etc/nginx/.htpasswd;
        	try_files $uri /index.html;
		#proxy_cache vendoor_cache;
		#proxy_cache_valid 200 60m;
	}

	ssl_certificate /etc/letsencrypt/live/www.vendoor.ca/fullchain.pem; 
	ssl_certificate_key /etc/letsencrypt/live/www.vendoor.ca/privkey.pem; 
    	include /etc/letsencrypt/options-ssl-nginx.conf; 
    	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 

}

